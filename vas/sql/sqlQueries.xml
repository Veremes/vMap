<?xml version="1.0" encoding="utf-8"?>
<sqlQueries>
	<title>Scripts d'installation et de mises Ã  jour de la base du VAS</title>
	<queriesCollection>
		<query>
			<type>init</type>
			<version>2016.01.00</version>
			<code>
				<![CDATA[ 
				CREATE SCHEMA s_vitis;
				CREATE OR REPLACE FUNCTION s_vitis.create_role_if_not_exists(rolename NAME, rights text) RETURNS TEXT AS $$ BEGIN    IF NOT EXISTS (SELECT * FROM pg_roles WHERE rolname = rolename) THEN        EXECUTE 'CREATE ROLE ' || rolename|| ' ' || rights;        RETURN 'CREATE ROLE';    ELSE        RETURN format('ROLE ''%I'' ALREADY EXISTS', rolename);    END IF; END; $$ LANGUAGE plpgsql;
				select s_vitis.create_role_if_not_exists('vitis_user', 'NOSUPERUSER INHERIT NOCREATEDB NOCREATEROLE NOREPLICATION');
				GRANT vitis_user TO u_vitis;
				select s_vitis.create_role_if_not_exists('vitis_admin', 'NOSUPERUSER INHERIT NOCREATEDB CREATEROLE NOREPLICATION');
				GRANT vitis_user TO vitis_admin;					
				ALTER SCHEMA s_vitis OWNER TO u_vitis;
				SET search_path = s_vitis, pg_catalog;
				CREATE FUNCTION f_add_col(_tbl regclass, _col text, _type regtype, OUT success boolean) RETURNS boolean LANGUAGE plpgsql AS $$ BEGIN IF EXISTS (SELECT 1 FROM pg_attribute WHERE  attrelid = _tbl AND    attname = _col   AND    NOT attisdropped) THEN   success := FALSE; ELSE   EXECUTE 'ALTER TABLE ' || _tbl || ' ADD COLUMN ' || quote_ident(_col) || ' ' || _type; success := TRUE; END IF; END $$;
				ALTER FUNCTION s_vitis.f_add_col(_tbl regclass, _col text, _type regtype, OUT success boolean) OWNER TO u_vitis;
				CREATE FUNCTION f_add_unique_index(_schema text, _table text, _col text, _name text, OUT success boolean) RETURNS boolean LANGUAGE plpgsql AS $$ BEGIN IF EXISTS (SELECT 1 FROM pg_class c JOIN   pg_namespace n ON n.oid = c.relnamespace WHERE  c.relname  = _name  AND   n.nspname = _schema ) THEN  success := FALSE; ELSE EXECUTE ' CREATE UNIQUE INDEX ' || _name || ' ON ' || _schema || '.' || _table || ' (lower(' || _col || '));' ; success := TRUE; END IF; END $$;
				ALTER FUNCTION s_vitis.f_add_unique_index(_schema text, _table text, _col text, _name text, OUT success boolean) OWNER TO u_vitis;
				CREATE FUNCTION s2hms(integer) RETURNS character varying LANGUAGE plpgsql AS $_$ declare nDureeSeconde ALIAS for $1; sDureeChaine varchar(10) ; nHeures int ; nMinutes int ; nSecondes int ; nHeures2 varchar(2) ; nMinutes2 varchar(2) ; nSecondes2 varchar(2) ; BEGIN nHeures := nDureeSeconde / 3600 ; nMinutes := (nDureeSeconde %% 3600) / 60 ; nSecondes := nDureeSeconde %% 60 ; if nHeures < 10 then nHeures2:= 0 || cast(nHeures as text) ; else nHeures2:= cast(nHeures as text)  ; end if; if nMinutes < 10 then nMinutes2:= 0 || cast(nMinutes as text) ; else nMinutes2:= cast(nMinutes as text)  ; end if; if nSecondes < 10 then nSecondes2:= 0 || cast(nSecondes as text) ; else nSecondes2:= cast(nSecondes as text)  ; end if; sDureeChaine := nHeures2 || ':' || nMinutes2 || ':' || nSecondes2; RETURN sDureeChaine; END; $_$;
				ALTER FUNCTION s_vitis.s2hms(integer) OWNER TO u_vitis;
				CREATE TABLE "user" (user_id integer NOT NULL,login character varying(50),name character varying(80),ip_constraint character varying(255), email character varying(100), company character varying(80),department character varying(80),last_connection timestamp without time zone, domain_id integer,restriction text);
				ALTER TABLE "user" OWNER TO u_vitis;
				CREATE TABLE vm_translation (translation_id character varying(60) NOT NULL, lang character varying(2) NOT NULL, translation text);
				ALTER TABLE vm_translation OWNER TO u_vitis;
				CREATE TABLE "group" (group_id integer NOT NULL, name character varying(50));
				ALTER TABLE "group" OWNER TO u_vitis;
				COMMENT ON TABLE "group" IS 'User group having the same access rights to workspaces and inboxes';
				CREATE TABLE user_group (user_id integer, group_id integer);
				ALTER TABLE user_group OWNER TO u_vitis;
				CREATE SEQUENCE seq_common   START WITH 1 INCREMENT BY 1  NO MINVALUE  NO MAXVALUE  CACHE 1;
				ALTER TABLE seq_common OWNER TO u_vitis;
				CREATE TABLE domain (domain_id integer NOT NULL, domain character varying(50), alias character varying(50), server character varying(100), port integer, dn_search_user character varying(255), filter_user character varying(100), dn_search_group character varying(255), filter_group character varying(100), login character varying(50), password character varying(50), type character varying(10), verify_rights boolean DEFAULT true);
				ALTER TABLE domain OWNER TO u_vitis;
				COMMENT ON TABLE domain IS 'Ms Active Directory domain';
				COMMENT ON COLUMN domain.dn_search_user IS 'Distinguished Name for users root node ';
				COMMENT ON COLUMN domain.dn_search_group IS 'Distinguished Name for groups root node ';
				CREATE TABLE privileges (    rolname character varying(100) NOT NULL,    description text);
				ALTER TABLE privileges OWNER TO u_vitis;
				CREATE SEQUENCE seq_translation    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;
				ALTER TABLE seq_translation OWNER TO u_vitis;
				CREATE SEQUENCE seq_vm    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;
				ALTER TABLE seq_vm OWNER TO u_vitis;
				CREATE VIEW v_group AS SELECT        CASE            WHEN (user_group.nb_members IS NULL) THEN (0)::bigint            ELSE user_group.nb_members        END AS nb_members,    "group".group_id,    "group".name   FROM ("group"     LEFT JOIN ( SELECT count(*) AS nb_members,            user_group_1.group_id           FROM user_group user_group_1          GROUP BY user_group_1.group_id) user_group ON (("group".group_id = user_group.group_id)));
				ALTER TABLE v_group OWNER TO u_vitis;
				CREATE TABLE vm_application_module (    application_name character varying(100) NOT NULL,    module_name character varying(50) NOT NULL);
				ALTER TABLE vm_application_module OWNER TO u_vitis;
				CREATE TABLE vm_mode (    mode_id character varying(100) NOT NULL,    module_id character varying(50));
				ALTER TABLE vm_mode OWNER TO u_vitis;
				CREATE TABLE vm_mode_rolname ( index integer, mode_id character varying(100) NOT NULL,    rolname character varying(100) NOT NULL);
				ALTER TABLE vm_mode_rolname OWNER TO u_vitis;
				CREATE VIEW v_mode AS SELECT DISTINCT vm_mode.mode_id,    vm_application_module.application_name,    vm_mode_rolname.index,    vm_application_module.module_name   FROM ((((vm_mode     LEFT JOIN vm_application_module ON (((vm_mode.module_id)::text = (vm_application_module.module_name)::text)))     LEFT JOIN vm_mode_rolname ON (((vm_mode.mode_id)::text = (vm_mode_rolname.mode_id)::text)))     JOIN pg_group ON ((pg_group.groname = (vm_mode_rolname.rolname)::name)))     JOIN pg_user ON (((pg_user.usesysid = ANY (pg_group.grolist)) AND ((pg_user.usename)::text = ("current_user"())::text))));
				ALTER TABLE v_mode OWNER TO u_vitis;
				CREATE VIEW v_ra_members_group AS SELECT count(*) AS nb_members,    user_group.group_id   FROM user_group  GROUP BY user_group.group_id;
				ALTER TABLE v_ra_members_group OWNER TO u_vitis;
				CREATE TABLE vm_section (    section_id integer DEFAULT nextval('seq_vm'::regclass) NOT NULL,    label_id character varying(60),    name character varying(50),    index integer,    event text,    tab_id integer,    template character varying(100),    ressource_id character varying(100), module character varying(100));
				ALTER TABLE vm_section OWNER TO u_vitis;
				CREATE TABLE vm_tab (    tab_id integer DEFAULT nextval('seq_vm'::regclass) NOT NULL,    event character varying(255) NOT NULL,    index integer DEFAULT 0 NOT NULL,    mode_id character varying(100) NOT NULL,    label_id character varying(60) NOT NULL,    ressource_id character varying(100),    edit_column character varying(255),    show_column character varying(255),    sorted_by character varying(100),    sorted_dir character varying(4) DEFAULT 'ASC'::character varying,    name character varying(100));
				ALTER TABLE vm_tab OWNER TO u_vitis;
				CREATE VIEW v_section AS SELECT vm_section.tab_id, vm_section.section_id, vm_section.event, vm_section.index, vm_translation.translation AS label, vm_translation.lang, vm_section.name, vm_section.template, vm_section.ressource_id, vm_section.module AS module_name FROM s_vitis.vm_section LEFT JOIN s_vitis.vm_translation ON vm_section.label_id::text = vm_translation.translation_id::text LEFT JOIN s_vitis.vm_tab ON vm_section.tab_id::text = vm_tab.tab_id::text;
				ALTER TABLE v_section OWNER TO u_vitis;
				CREATE VIEW v_tab AS SELECT vm_tab.tab_id,    vm_tab.event,    vm_tab.index,    vm_tab.mode_id,    vm_translation.translation AS label,    vm_translation.lang,    vm_tab.ressource_id,    vm_tab.edit_column,    vm_tab.show_column,    vm_tab.sorted_by,    vm_tab.sorted_dir,    vm_tab.name   FROM (vm_tab     LEFT JOIN vm_translation ON (((vm_tab.label_id)::text = (vm_translation.translation_id)::text)));
				ALTER TABLE v_tab OWNER TO u_vitis;
				CREATE VIEW v_user AS SELECT "user".user_id,    "user".login,    "user".name,    "user".email,    "user".company,    "user".department,    "user".ip_constraint,    domain.domain,    "user".domain_id,    "user".last_connection,    "user".restriction,        CASE            WHEN ((array_to_string(ARRAY( SELECT pg_group.groname               FROM (pg_group                 JOIN pg_roles ON ((pg_roles.oid = ANY (pg_group.grolist))))              WHERE ((("user".login)::name = pg_roles.rolname) AND ((pg_group.groname = 'vitis_admin'::name) OR (pg_group.groname = 'vitis_user'::name)))), '|'::text) = 'vitis_user|vitis_admin'::text) OR (array_to_string(ARRAY( SELECT pg_group.groname               FROM (pg_group                 JOIN pg_roles ON ((pg_roles.oid = ANY (pg_group.grolist))))              WHERE ((("user".login)::name = pg_roles.rolname) AND ((pg_group.groname = 'vitis_admin'::name) OR (pg_group.groname = 'vitis_user'::name)))), '|'::text) = 'vitis_admin|vitis_user'::text)) THEN 'admin'::text            WHEN (array_to_string(ARRAY( SELECT pg_group.groname               FROM (pg_group                 JOIN pg_roles ON ((pg_roles.oid = ANY (pg_group.grolist))))              WHERE ((("user".login)::name = pg_roles.rolname) AND ((pg_group.groname = 'vitis_admin'::name) OR (pg_group.groname = 'vitis_user'::name)))), '|'::text) = 'vitis_user'::text) THEN 'user'::text            ELSE ''::text        END AS role   FROM ("user"     LEFT JOIN domain ON (("user".domain_id = domain.domain_id)));
				ALTER TABLE v_user OWNER TO u_vitis;
				CREATE VIEW v_user_group AS SELECT user_group.group_id,    user_group.user_id   FROM ((user_group     LEFT JOIN "user" ON ((user_group.user_id = "user".user_id)))     LEFT JOIN "group" ON (("group".group_id = user_group.group_id)))  WHERE ((("user".login)::name)::text = ("current_user"())::text);
				ALTER TABLE v_user_group OWNER TO u_vitis;
				CREATE TABLE version (    version character varying(10) NOT NULL,    build integer NOT NULL,    date timestamp with time zone NOT NULL,    active boolean);
				ALTER TABLE version OWNER TO u_vitis;
				CREATE TABLE vm_application (    name character varying(100) NOT NULL);
				ALTER TABLE vm_application OWNER TO u_vitis;
				CREATE TABLE vm_module (    module_id character varying(50) NOT NULL,    description text,    version character varying(50) NOT NULL,    label character varying(50),    type character varying(3));
				ALTER TABLE vm_module OWNER TO u_vitis;
				CREATE TABLE vm_string (    string text,    string_id character varying(60) NOT NULL);
				ALTER TABLE vm_string OWNER TO u_vitis;
				CREATE TABLE vm_table_button (    button_class character varying(50),    table_button_id integer DEFAULT nextval('seq_vm'::regclass) NOT NULL,    event character varying(100) NOT NULL,    label_id character varying(60),    ressource_id character varying(100),    tab_id integer);
				ALTER TABLE vm_table_button OWNER TO u_vitis;
				CREATE TABLE vm_table_field (    table_field_id integer DEFAULT nextval('seq_vm'::regclass) NOT NULL,    name character varying(200) NOT NULL,    sortable boolean DEFAULT true,    resizeable boolean DEFAULT false,    index integer,     width integer,    align character varying(6) DEFAULT 'left'::character varying NOT NULL,    label_id character varying(60),    module character varying(50),    ressource_id character varying(100),    template character varying(255),    tab_id integer);
				ALTER TABLE vm_table_field OWNER TO u_vitis;
				INSERT INTO privileges (rolname, description) VALUES ('vitis_admin', E'rÃ´le administrateur de vitis\nPermet d''accÃ©der aux modes :\n   - Utilisateur\n - Utilisateurs\n    - Configuration\n   - Logs');
				INSERT INTO privileges (rolname, description) VALUES ('vitis_user', E'rÃ´le utilisateur de vitis\n\nPermet de se connecter Ã  l''application');
				INSERT INTO vm_mode (mode_id, module_id) VALUES ('user', 'vitis');
				INSERT INTO vm_mode (mode_id, module_id) VALUES ('users', 'vitis');
				INSERT INTO vm_mode (mode_id, module_id) VALUES ('configuration', 'vitis');
				INSERT INTO vm_mode (mode_id, module_id) VALUES ('logs', 'vitis');
				INSERT INTO vm_mode (mode_id, module_id) VALUES ('help', 'vitis');
				INSERT INTO vm_mode_rolname (index, mode_id, rolname) VALUES (20, 'users', 'vitis_admin');
				INSERT INTO vm_mode_rolname (index, mode_id, rolname) VALUES (70, 'configuration', 'vitis_admin');
				INSERT INTO vm_mode_rolname (index, mode_id, rolname) VALUES (80, 'logs', 'vitis_admin');
				INSERT INTO vm_mode_rolname (index, mode_id, rolname) VALUES (10, 'user', 'vitis_user');
				INSERT INTO vm_mode_rolname (index, mode_id, rolname) VALUES (90, 'help', 'vitis_admin');
				INSERT INTO vm_module (module_id, description, version, label, type) VALUES ('vitis', 'module vitis veremes', '0.1', 'vitis', NULL);
				INSERT INTO vm_string (string, string_id) VALUES ('Chaine de caractÃ¨re nulle', 'vitis_1');
				INSERT INTO vm_string (string, string_id) VALUES ('onglet 2 du mode  (Utilisateurs) utilisÃ© dans la table vm_tab', 'vitis_2');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre de la list correspondant Ã  le vm_table 3 (v_user)', 'vitis_3');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre Formulaire vm_table id 3 (v_user)', 'vitis_4');
				INSERT INTO vm_string (string, string_id) VALUES ('Button d''ajout de la table v_user table_button_id = 38', 'vitis_5');
				INSERT INTO vm_string (string, string_id) VALUES ('Button de suppression de la table v_user table_button_id =39', 'vitis_6');
				INSERT INTO vm_string (string, string_id) VALUES ('Button import AD de la table v_user table_button_id =40', 'vitis_7');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ user_id correspondant au table field_id 1', 'vitis_8');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ login correspondant au table field_id 11', 'vitis_9');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ name correspondant au table field_id 12', 'vitis_10');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ email correspondant au table field_id 13', 'vitis_11');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ ip correspondant au table field_id 14', 'vitis_12');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ company correspondant au table field_id 15', 'vitis_13');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ domain_id de la table domain correspondant au table field_id 146', 'vitis_14');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ Role de la table v_user pour connaitre si un utilisateur est administrateur ou pas', 'vitis_15');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ department correspondant au table field_id 18', 'vitis_16');
				INSERT INTO vm_string (string, string_id) VALUES ('onglet 1 du mode administration (Annuaires) utilisÃ© dans la table vm_tab', 'vitis_17');
				INSERT INTO vm_string (string, string_id) VALUES ('onglet 3 du mode administration (Groupes) utilisÃ© dans la table vm_tab', 'vitis_18');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre Formulaire vm_table id (group)', 'vitis_19');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre de la list correspondant Ã  le vm_table 1 (group)', 'vitis_20');
				INSERT INTO vm_string (string, string_id) VALUES ('Button d''ajout de la table group table_button_id = 9', 'vitis_21');
				INSERT INTO vm_string (string, string_id) VALUES ('Button de suppression de la table group table_button_id =10', 'vitis_22');
				INSERT INTO vm_string (string, string_id) VALUES ('Button import AD de la table group table_button_id =50', 'vitis_23');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ id de la vue group correspondant au table field_id 154', 'vitis_24');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ nom de la vue group correspondant au table field_id 135', 'vitis_25');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ nb_members de la vue v_ra_members_group correspondant au champ Membres', 'vitis_26');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre de la list correspondant Ã  le vm_table 19 (domain)', 'vitis_27');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre Formulaire vm_table domain', 'vitis_28');
				INSERT INTO vm_string (string, string_id) VALUES ('Button d''ajout de la table domain table_button_id = 7', 'vitis_29');
				INSERT INTO vm_string (string, string_id) VALUES ('Button de suppression de la table domain table_button_id =8', 'vitis_30');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ domain_id de la table domain correspondant au table field_id 145', 'vitis_31');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ domain de la table domain correspondant au table field_id 145', 'vitis_32');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ server de la table domain correspondant au table field_id 147', 'vitis_33');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ port de la table domain correspondant au table field_id 148', 'vitis_34');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ alias correspondant au table field_id 139', 'vitis_35');
				INSERT INTO vm_string (string, string_id) VALUES ('"Champ name de la vue update correspondant au table_field_id 41"', 'vitis_37');
				INSERT INTO vm_string (string, string_id) VALUES ('"Champ from de la vue update correspondant au table_field_id 42"', 'vitis_38');
				INSERT INTO vm_string (string, string_id) VALUES ('"Champ to de la vue update correspondant au table_field_id 43"', 'vitis_39');
				INSERT INTO vm_string (string, string_id) VALUES ('"Champ publishing_date de la vue update correspondant au table_field_id 44"', 'vitis_40');
				INSERT INTO vm_string (string, string_id) VALUES ('"Champ status de la vue update correspondant au table_field_id 45"', 'vitis_41');
				INSERT INTO vm_string (string, string_id) VALUES ('"Champ telechargement de la vue update correspondant au table_field_id 46"', 'vitis_42');
				INSERT INTO vm_string (string, string_id) VALUES ('"Champ installation de la vue update correspondant au table_field_id 47"', 'vitis_43');
				INSERT INTO vm_string (string, string_id) VALUES ('"Champ log de la vue update correspondant au table_field_id 48"', 'vitis_44');
				INSERT INTO vm_string (string, string_id) VALUES ('"Champ error_log de la vue update correspondant au table_field_id 49"', 'vitis_45');
				INSERT INTO vm_string (string, string_id) VALUES ('status disponible de la table rt_update_status', 'vitis_46');
				INSERT INTO vm_string (string, string_id) VALUES ('status tÃ©lÃ©chargÃ© de la table rt_update_status', 'vitis_47');
				INSERT INTO vm_string (string, string_id) VALUES ('status installÃ© de la table rt_update_status', 'vitis_48');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ update_id correspondant au table field_id 41', 'vitis_49');
				INSERT INTO vm_string (string, string_id) VALUES ('status erreur de la table rt_update_status', 'vitis_50');
				INSERT INTO vm_string (string, string_id) VALUES ('onglet 4 du mode administration (PrivilÃ¨ges) utilisÃ© dans la table vm_tab', 'vitis_51');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre Formulaire vm_table id (privileges)', 'vitis_52');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre de la liste correspondant Ã  le vm_table 1 (privileges)', 'vitis_53');
				INSERT INTO vm_string (string, string_id) VALUES ('Groupe d''utilisateurs', 'vitis_54');
				INSERT INTO vm_string (string, string_id) VALUES ('Description du groupe d''utilisateurs', 'vitis_55');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre section general pour v_user', 'vitis_57');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre section general pour group', 'vitis_58');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre section general pour domain', 'vitis_59');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre section general pour privileges', 'vitis_60');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ last_connection correspondant Ã  la table v_user', 'vitis_61');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ alias correspondant Ã  la table domain', 'vitis_62');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ type correspondant Ã  la table domain', 'vitis_63');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ from de la vue update', 'vitis_64');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ to de la vue update', 'vitis_65');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ publishing_date de la vue update', 'vitis_66');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ status de la vue update', 'vitis_67');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ telechargement de la vue update', 'vitis_68');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ installation de la vue update', 'vitis_69');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ log de la vue update', 'vitis_70');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ error_log de la vue update', 'vitis_71');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ update_id de la vue update', 'vitis_72');
				INSERT INTO vm_string (string, string_id) VALUES ('Button de suppression de la table update', 'vitis_73');
				INSERT INTO vm_string (string, string_id) VALUES ('Champ name de la vue update', 'vitis_74');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre section configuration pour configuration', 'vitis_75');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre section version pour configuration', 'vitis_76');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre section php info pour configuration', 'vitis_77');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre section mises Ã  jour pour configuration', 'vitis_78');
				INSERT INTO vm_string (string, string_id) VALUES ('Titre section installation pour configuration', 'vitis_79');
				INSERT INTO vm_string (string, string_id) VALUES ('Onglet Administration de l''objet vitis_help', 'vitis_291');
				INSERT INTO vm_string (string, string_id) VALUES ('Onglet Web service de l''objet vitis_help', 'vitis_80');
				INSERT INTO vm_tab (tab_id, event, index, mode_id, label_id, ressource_id, edit_column, show_column, sorted_by, sorted_dir, name) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'loadConfiguration()', 0, 'configuration', 'vitis_1', NULL, NULL, NULL, NULL, 'ASC', 'vitis_configuration');
				INSERT INTO vm_tab (tab_id, event, index, mode_id, label_id, ressource_id, edit_column, show_column, sorted_by, sorted_dir, name) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'loadHelp()', 0, 'help', 'vitis_1', NULL, NULL, NULL, NULL, 'ASC', 'vitis_help');
				INSERT INTO vm_tab (tab_id, event, index, mode_id, label_id, ressource_id, edit_column, show_column, sorted_by, sorted_dir, name) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'loadLogsJob()', 0, 'logs', 'vitis_1', NULL, NULL, NULL, NULL, 'ASC', 'vitis_log');
				INSERT INTO vm_tab (tab_id, event, index, mode_id, label_id, ressource_id, edit_column, show_column, sorted_by, sorted_dir, name) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'loadUser();', 0, 'user', 'vitis_1', 'vitis/users', NULL, NULL, NULL, 'ASC', 'vitis_user');
				INSERT INTO vm_tab (tab_id, event, index, mode_id, label_id, ressource_id, edit_column, show_column, sorted_by, sorted_dir, name) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'loadList()', 1, 'users', 'vitis_17', 'vitis/domains', 'editSectionForm', 'showSectionForm', 'domain_id', 'DESC', 'vitis_domain');
				INSERT INTO vm_tab (tab_id, event, index, mode_id, label_id, ressource_id, edit_column, show_column, sorted_by, sorted_dir, name) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'loadList()', 2, 'users', 'vitis_18', 'vitis/groups', 'editSectionForm', 'showSectionForm', 'group_id', 'DESC', 'vitis_group');
				INSERT INTO vm_tab (tab_id, event, index, mode_id, label_id, ressource_id, edit_column, show_column, sorted_by, sorted_dir, name) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'loadList()', 3, 'users', 'vitis_51', 'vitis/privileges', 'editSectionForm', 'showSectionForm', 'rolname', 'ASC', 'vitis_privilege');
				INSERT INTO vm_tab (tab_id, event, index, mode_id, label_id, ressource_id, edit_column, show_column, sorted_by, sorted_dir, name) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'loadList()', 0, 'users', 'vitis_2', 'vitis/users', 'editSectionForm', 'showSectionForm', 'user_id', 'DESC', 'vitis_users');
				INSERT INTO vm_section (section_id, label_id, name, index, event, tab_id, template, ressource_id, module) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'vitis_57', 'general', 1, 'javascript:loadSection', (select tab_id from s_vitis.vm_tab where name = 'vitis_users'), 'workspaceListTpl.html', NULL, 'vitis');
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'nb_members', true, true, 3, 130, 'right', 'vitis_26', NULL, 'vitis/groups', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_group'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'domain_id', true, true, 1, 30, 'right', 'vitis_31', NULL, 'vitis/domains', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_domain'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'type', true, true, 2, 100, 'left', 'vitis_63', NULL, 'vitis/domains', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_domain'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'alias', true, true, 3, 300, 'left', 'vitis_62', NULL, 'vitis/domains', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_domain'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'domain', true, true, 4, 300, 'left', 'vitis_32', NULL, 'vitis/domains', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_domain'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'server', true, true, 5, 150, 'left', 'vitis_33', NULL, 'vitis/domains', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_domain'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'port', true, true, 6, 50, 'right', 'vitis_34', NULL, 'vitis/domains', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_domain'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'group_id', true, true, 1, 40, 'right', 'vitis_24', NULL, 'vitis/groups', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_group'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'rolname', true, true, 1, 200, 'left', 'vitis_54', NULL, 'vitis/privileges', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_privilege'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'description', true, true, 2, 800, 'left', 'vitis_55', NULL, 'vitis/privileges', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_privilege'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'name', true, true, 2, 200, 'left', 'vitis_25', NULL, 'vitis/groups', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_group'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'name', true, true, 3, 150, 'left', 'vitis_10', NULL, 'vitis/users', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_users'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'email', true, true, 6, 250, 'left', 'vitis_11', NULL, 'vitis/users', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_users'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'user_id', true, true, 1, 30, 'right', 'vitis_8', NULL, 'vitis/users', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_users'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'login', true, true, 2, 200, 'left', 'vitis_9', NULL, 'vitis/users', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_users'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'ip_constraint', true, true, 9, 150, 'left', 'vitis_12', NULL, 'vitis/users', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_users'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'company', true, true, 5, 130, 'left', 'vitis_13', NULL, 'vitis/users', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_users'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'domain', true, true, 8, 200, 'left', 'vitis_14', NULL, 'vitis/users', NULL, (select tab_id from s_vitis.vm_tab where name = 'vitis_users'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'last_connection', true, true, 9, 170, 'left', 'vitis_61', NULL, 'vitis/users', '<div data-app-format-date-column="{{row.entity[col.field]}}"></div>', (select tab_id from s_vitis.vm_tab where name = 'vitis_users'));
				INSERT INTO vm_table_field (table_field_id, name, sortable, resizeable, index, width, align, label_id, module, ressource_id, template, tab_id) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'role', true, true, 4, 40, 'center', 'vitis_15', NULL, 'vitis/users', '<div data-app-user-role-column="{{row.entity[col.field]}}"></div>', (select tab_id from s_vitis.vm_tab where name = 'vitis_users'));
				INSERT INTO vm_section (section_id, label_id, name, index, event, tab_id, template, ressource_id, module) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'vitis_59', 'general', 1, 'javascript:loadSection', (select tab_id from s_vitis.vm_tab where name = 'vitis_domain'), 'workspaceListTpl.html', NULL, 'vitis');
				INSERT INTO vm_section (section_id, label_id, name, index, event, tab_id, template, ressource_id, module) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'vitis_60', 'general', 1, 'javascript:loadSection',  (select tab_id from s_vitis.vm_tab where name = 'vitis_privilege'), 'workspaceListTpl.html', NULL, 'vitis');
				INSERT INTO vm_section (section_id, label_id, name, index, event, tab_id, template, ressource_id, module) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'vitis_1', 'general', 1, 'Javascript:reloadSectionForm',  (select tab_id from s_vitis.vm_tab where name = 'vitis_user'), 'simpleFormTpl.html', NULL, 'vitis');
				INSERT INTO vm_section (section_id, label_id, name, index, event, tab_id, template, ressource_id, module) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'vitis_58', 'general', 1, 'javascript:loadSection',  (select tab_id from s_vitis.vm_tab where name = 'vitis_group'), 'workspaceListTpl.html', NULL, 'vitis');
				INSERT INTO vm_section (section_id, label_id, name, index, event, tab_id, template, ressource_id, module) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'vitis_1', 'general', 1, 'Javascript:reloadSectionForm',  (select tab_id from s_vitis.vm_tab where name = 'vitis_log'), 'doubleFormTpl.html', NULL, 'vitis');
				INSERT INTO vm_section (section_id, label_id, name, index, event, tab_id, template, ressource_id, module) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'vitis_76', 'version', 2, 'Javascript:reloadSectionForm', (select tab_id from s_vitis.vm_tab where name = 'vitis_configuration'), 'modules/vitis/templates/versionConfigurationTpl.html', NULL, 'vitis');
				INSERT INTO vm_section (section_id, label_id, name, index, event, tab_id, template, ressource_id, module) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'vitis_77', 'phpinfo', 3, 'Javascript:reloadSectionForm', (select tab_id from s_vitis.vm_tab where name = 'vitis_configuration'), 'modules/vitis/templates/phpInfoConfigurationTpl.html', NULL, 'vitis');
				INSERT INTO vm_section (section_id, label_id, name, index, event, tab_id, template, ressource_id, module) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'vitis_75', 'general', 1, 'setPropertiesFormValues', (select tab_id from s_vitis.vm_tab where name = 'vitis_configuration'), 'simpleFormTpl.html', NULL, 'vitis');
				INSERT INTO vm_section (section_id, label_id, name, index, event, tab_id, template, ressource_id, module) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'vitis_80', 'webService', 2, 'Javascript:reloadSectionForm', (select tab_id from s_vitis.vm_tab where name = 'vitis_help'), 'modules/vitis/templates/webServiceHelpTpl.html', NULL, 'vitis');
				INSERT INTO vm_table_button (button_class, table_button_id, event, label_id, ressource_id, tab_id) VALUES ('add_smallFlexigrid', (select nextval('s_vitis.seq_vm'::regclass)), 'AddSectionForm', 'vitis_5', 'vitis/users', (select tab_id from s_vitis.vm_tab where name = 'vitis_users'));
				INSERT INTO vm_table_button (button_class, table_button_id, event, label_id, ressource_id, tab_id) VALUES ('deleteFlexigrid', (select nextval('s_vitis.seq_vm'::regclass)), 'deleteUsers()', 'vitis_6', 'vitis/users', (select tab_id from s_vitis.vm_tab where name = 'vitis_users'));
				INSERT INTO vm_table_button (button_class, table_button_id, event, label_id, ressource_id, tab_id) VALUES ('add_smallFlexigrid', (select nextval('s_vitis.seq_vm'::regclass)), 'AddSectionForm', 'vitis_29', 'vitis/domains', (select tab_id from s_vitis.vm_tab where name = 'vitis_domain'));
				INSERT INTO vm_table_button (button_class, table_button_id, event, label_id, ressource_id, tab_id) VALUES ('deleteFlexigrid', (select nextval('s_vitis.seq_vm'::regclass)), 'DeleteSelection', 'vitis_30', 'vitis/domains', (select tab_id from s_vitis.vm_tab where name = 'vitis_domain'));
				INSERT INTO vm_table_button (button_class, table_button_id, event, label_id, ressource_id, tab_id) VALUES ('add_smallFlexigrid', (select nextval('s_vitis.seq_vm'::regclass)), 'AddSectionForm', 'vitis_21', 'vitis/groups', (select tab_id from s_vitis.vm_tab where name = 'vitis_group'));
				INSERT INTO vm_table_button (button_class, table_button_id, event, label_id, ressource_id, tab_id) VALUES ('deleteFlexigrid', (select nextval('s_vitis.seq_vm'::regclass)), 'DeleteSelection', 'vitis_22', 'vitis/groups', (select tab_id from s_vitis.vm_tab where name = 'vitis_group'));
				INSERT INTO vm_table_button (button_class, table_button_id, event, label_id, ressource_id, tab_id) VALUES ('adImport', (select nextval('s_vitis.seq_vm'::regclass)), 'ImportFromAd("group")', 'vitis_23', 'vitis/groups', (select tab_id from s_vitis.vm_tab where name = 'vitis_group'));
				INSERT INTO vm_table_button (button_class, table_button_id, event, label_id, ressource_id, tab_id) VALUES ('adImport', (select nextval('s_vitis.seq_vm'::regclass)), 'ImportFromAd("person")', 'vitis_7', 'vitis/users', (select tab_id from s_vitis.vm_tab where name = 'vitis_users'));
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_1', 'fr', NULL);
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_1', 'en', NULL);
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_2', 'fr', 'Utilisateurs');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_2', 'en', 'Users');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_3', 'fr', 'Utilisateurs');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_3', 'en', 'Users');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_4', 'fr', 'utilisateur');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_4', 'en', 'user');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_5', 'en', 'Add user');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_6', 'en', 'Delete users');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_6', 'fr', 'Supprimer les utilisateurs');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_7', 'fr', 'Importer de l''A.D.');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_7', 'en', 'Import from A.D.');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_8', 'fr', 'ID');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_8', 'en', 'ID');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_9', 'fr', 'Compte');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_9', 'en', 'Login');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_10', 'fr', 'Nom');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_10', 'en', 'Name');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_11', 'fr', 'Email');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_11', 'en', 'Email');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_12', 'en', 'Workstation IP');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_13', 'fr', 'SociÃ©tÃ©');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_13', 'en', 'Company');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_14', 'fr', 'Domaine');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_14', 'en', 'Domain');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_15', 'fr', 'RÃ´le');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_15', 'en', 'Role');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_16', 'en', 'Department');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_16', 'fr', 'Service');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_17', 'fr', 'Domaines');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_17', 'en', 'Domains');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_18', 'fr', 'Groupes');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_18', 'en', 'Groups');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_19', 'fr', 'groupe');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_19', 'en', 'group');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_20', 'fr', 'Groupes');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_20', 'en', 'Groups');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_21', 'en', 'Add group');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_22', 'fr', 'Supprimer les groupes');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_22', 'en', 'Delete groups');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_23', 'fr', 'Importer de l''A.D.');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_23', 'en', 'Import from AD');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_24', 'fr', 'ID');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_24', 'en', 'ID');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_25', 'fr', 'Groupe');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_25', 'en', 'Group');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_28', 'en', 'domain');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_28', 'fr', 'domaine');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_27', 'en', 'Domains');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_27', 'fr', 'Domaines');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_29', 'en', 'Add domain');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_30', 'en', 'Delete domaines');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_30', 'fr', 'Supprimer les domaines');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_31', 'fr', 'ID');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_31', 'en', 'ID');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_32', 'fr', 'Domaine');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_32', 'en', 'Domain');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_33', 'fr', 'Serveur');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_33', 'en', 'Server');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_34', 'fr', 'Port');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_34', 'en', 'Port');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_35', 'fr', 'Supprimer mise Ã  jour');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_35', 'en', 'Delete update');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_37', 'fr', 'Nom');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_37', 'en', 'Name');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_38', 'fr', 'De');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_38', 'en', 'From');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_39', 'fr', 'A');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_39', 'en', 'To');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_40', 'fr', 'Date de publication');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_40', 'en', 'Publishing date');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_41', 'fr', 'Statut');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_41', 'en', 'Status');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_42', 'fr', 'TÃ©lÃ©chargement');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_42', 'en', 'Download');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_43', 'fr', 'Installation');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_43', 'en', 'Installation');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_44', 'fr', 'Log');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_44', 'en', 'Log');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_45', 'fr', 'Erreurs');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_45', 'en', 'Errors');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_46', 'fr', 'Disponible');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_46', 'en', 'Available');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_47', 'fr', 'TÃ©lÃ©chargÃ©');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_47', 'en', 'Downloaded');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_48', 'fr', 'InstallÃ©');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_48', 'en', 'Installed');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_49', 'fr', 'ID');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_49', 'en', 'ID');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_50', 'fr', 'Erreur');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_50', 'en', 'Error');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_51', 'fr', 'PrivilÃ¨ges');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_51', 'en', 'Privileges');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_52', 'fr', 'PrivilÃ¨ges');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_52', 'en', 'Privileges');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_53', 'fr', 'PrivilÃ¨ges');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_53', 'en', 'Privileges');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_54', 'fr', 'Groupes d''utilisateurs');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_54', 'en', 'User groups');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_55', 'fr', 'Description');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_55', 'en', 'Description');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_57', 'fr', 'GÃ©nÃ©ral');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_57', 'en', 'General');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_58', 'fr', 'GÃ©nÃ©ral');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_58', 'en', 'General');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_59', 'fr', 'GÃ©nÃ©ral');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_59', 'en', 'General');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_60', 'fr', 'GÃ©nÃ©ral');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_60', 'en', 'General');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_61', 'fr', 'DerniÃ¨re connexion');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_61', 'en', 'Last connection');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_62', 'fr', 'Alias');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_62', 'en', 'Alias');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_63', 'fr', 'Type');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_63', 'en', 'Type');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_64', 'fr', 'De');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_64', 'en', 'From');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_65', 'fr', 'A');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_65', 'en', 'To');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_66', 'fr', 'Date de publication');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_26', 'fr', 'Nombre de membres');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_26', 'en', 'Number of members');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_66', 'en', 'Publishing date');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_67', 'fr', 'Statut');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_67', 'en', 'Status');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_68', 'fr', 'TÃ©lÃ©chargement');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_68', 'en', 'Download');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_69', 'fr', 'Installation');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_69', 'en', 'Installation');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_70', 'fr', 'Log');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_70', 'en', 'Log');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_71', 'fr', 'Erreurs');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_71', 'en', 'Errors');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_72', 'fr', 'ID');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_72', 'en', 'ID');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_73', 'fr', 'Supprimer mise Ã  jour');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_73', 'en', 'Delete update');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_74', 'fr', 'Nom');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_74', 'en', 'Name');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_75', 'fr', 'Configuration');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_75', 'en', 'Configuration');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_76', 'fr', 'Version');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_76', 'en', 'Version');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_77', 'fr', 'Php info');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_77', 'en', 'Php info');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_78', 'fr', 'Mises Ã  jour');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_78', 'en', 'Mises Ã  jour');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_79', 'fr', 'Installation');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_79', 'en', 'Installation');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_80', 'fr', 'Service Web');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_80', 'en', 'Web Service');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_21', 'fr', 'Ajouter un groupe');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_29', 'fr', 'Ajouter un domaine');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_5', 'fr', 'Ajouter un utilisateur');
				INSERT INTO vm_translation (translation_id, lang, translation) VALUES ('vitis_12', 'fr', 'IP du poste');
				ALTER TABLE ONLY vm_application_module ADD CONSTRAINT fk_application_module_name PRIMARY KEY (application_name, module_name);
				ALTER TABLE ONLY domain   ADD CONSTRAINT pk_domain_id PRIMARY KEY (domain_id);
				ALTER TABLE ONLY "group" ADD CONSTRAINT pk_group_id PRIMARY KEY (group_id);
				ALTER TABLE ONLY vm_application ADD CONSTRAINT pk_name PRIMARY KEY (name);
				ALTER TABLE ONLY privileges   ADD CONSTRAINT pk_privileges PRIMARY KEY (rolname);
				ALTER TABLE ONLY vm_string    ADD CONSTRAINT pk_string_id PRIMARY KEY (string_id);
				ALTER TABLE ONLY vm_tab    ADD CONSTRAINT pk_tab_id PRIMARY KEY (tab_id);
				ALTER TABLE ONLY vm_table_button    ADD CONSTRAINT pk_table_button_id PRIMARY KEY (table_button_id);
				ALTER TABLE ONLY vm_table_field   ADD CONSTRAINT pk_table_field_id PRIMARY KEY (table_field_id);
				ALTER TABLE ONLY user_group    ADD CONSTRAINT pk_user_group UNIQUE (group_id, user_id);
				ALTER TABLE ONLY "user"    ADD CONSTRAINT pk_user_id PRIMARY KEY (user_id);
				ALTER TABLE ONLY vm_mode    ADD CONSTRAINT pk_vm_mode PRIMARY KEY (mode_id);
				ALTER TABLE ONLY vm_mode_rolname    ADD CONSTRAINT pk_vm_mode_rolname PRIMARY KEY (rolname, mode_id);
				ALTER TABLE ONLY vm_module    ADD CONSTRAINT pk_vm_module PRIMARY KEY (module_id);
				ALTER TABLE ONLY vm_section    ADD CONSTRAINT pk_vm_section PRIMARY KEY (section_id);
				ALTER TABLE ONLY vm_translation    ADD CONSTRAINT pk_vm_translation PRIMARY KEY (translation_id, lang);
				ALTER TABLE ONLY version    ADD CONSTRAINT pk_version PRIMARY KEY (version);
				ALTER TABLE ONLY vm_module    ADD CONSTRAINT uk_label UNIQUE (label);
				ALTER TABLE ONLY "user"    ADD CONSTRAINT uk_user_login UNIQUE (login);
				CREATE INDEX fki_login ON "user" USING btree (login);
				CREATE INDEX fki_user_restriction ON "user" USING btree (restriction);
				CREATE UNIQUE INDEX uk_domain ON domain USING btree (lower((domain)::text));
				CREATE UNIQUE INDEX uk_login ON "user" USING btree (lower((login)::text));
				CREATE UNIQUE INDEX uk_mode_id ON vm_mode_rolname USING btree (rolname, lower((mode_id)::text));
				CREATE UNIQUE INDEX uk_name_group ON "group" USING btree (lower((name)::text));
				ALTER TABLE s_vitis.vm_tab  ADD CONSTRAINT uk_vm_tab_name UNIQUE (name);
				CREATE RULE delete_v_group AS   ON DELETE TO v_group DO INSTEAD  DELETE FROM "group"  WHERE ("group".group_id = old.group_id);
				CREATE RULE delete_v_user AS    ON DELETE TO v_user DO INSTEAD  DELETE FROM "user"  WHERE ("user".user_id = old.user_id);
				CREATE RULE delete_v_user_group AS    ON DELETE TO v_user_group DO INSTEAD  DELETE FROM user_group  WHERE (user_group.group_id = old.group_id);
				CREATE RULE insert_v_group AS    ON INSERT TO v_group DO INSTEAD  INSERT INTO "group" (group_id, name)  VALUES (new.group_id, new.name);
				CREATE RULE insert_v_user AS    ON INSERT TO v_user DO INSTEAD  INSERT INTO "user" (user_id, login, domain_id, name, email, company, department, ip_constraint, restriction)  VALUES (new.user_id, new.login, new.domain_id, new.name, new.email, new.company, new.department, new.ip_constraint, new.restriction);
				CREATE RULE update_v_group AS    ON UPDATE TO v_group DO INSTEAD  UPDATE "group" SET name = new.name  WHERE ("group".group_id = new.group_id);
				CREATE RULE update_v_user AS    ON UPDATE TO v_user DO INSTEAD  UPDATE "user" SET name = new.name, email = new.email, company = new.company, department = new.department, ip_constraint = new.ip_constraint, restriction = new.restriction  WHERE ("user".user_id = new.user_id);
				ALTER TABLE ONLY vm_application_module    ADD CONSTRAINT fk_application_name FOREIGN KEY (application_name) REFERENCES vm_application(name) ON UPDATE CASCADE ON DELETE CASCADE;
				ALTER TABLE ONLY "user"    ADD CONSTRAINT fk_domain_id FOREIGN KEY (domain_id) REFERENCES domain(domain_id) ON UPDATE CASCADE ON DELETE CASCADE;
				ALTER TABLE ONLY user_group    ADD CONSTRAINT fk_group_id_user FOREIGN KEY (group_id) REFERENCES "group"(group_id) ON DELETE CASCADE;
				ALTER TABLE ONLY vm_table_field    ADD CONSTRAINT fk_label_id FOREIGN KEY (label_id) REFERENCES vm_string(string_id);
				ALTER TABLE ONLY vm_table_button    ADD CONSTRAINT fk_label_id_button FOREIGN KEY (label_id) REFERENCES vm_string(string_id);
				ALTER TABLE ONLY vm_mode_rolname    ADD CONSTRAINT fk_mode_id FOREIGN KEY (mode_id) REFERENCES vm_mode(mode_id) ON DELETE CASCADE;
				ALTER TABLE ONLY vm_tab    ADD CONSTRAINT fk_mode_id_tab FOREIGN KEY (mode_id) REFERENCES vm_mode(mode_id) ON DELETE CASCADE;
				ALTER TABLE ONLY vm_mode    ADD CONSTRAINT fk_module_id FOREIGN KEY (module_id) REFERENCES vm_module(module_id) ON DELETE CASCADE;
				ALTER TABLE ONLY vm_application_module    ADD CONSTRAINT fk_module_name FOREIGN KEY (module_name) REFERENCES vm_module(module_id) ON UPDATE CASCADE ON DELETE CASCADE;
				ALTER TABLE ONLY vm_mode_rolname    ADD CONSTRAINT fk_rolname FOREIGN KEY (rolname) REFERENCES privileges(rolname) ON DELETE CASCADE;
				ALTER TABLE ONLY vm_tab    ADD CONSTRAINT fk_string_id_tab FOREIGN KEY (label_id) REFERENCES vm_string(string_id);
				ALTER TABLE ONLY vm_translation    ADD CONSTRAINT fk_string_id_translation FOREIGN KEY (translation_id) REFERENCES vm_string(string_id) ON DELETE CASCADE;
				ALTER TABLE ONLY vm_section    ADD CONSTRAINT fk_string_section FOREIGN KEY (label_id) REFERENCES vm_string(string_id);
				ALTER TABLE ONLY user_group    ADD CONSTRAINT fk_user_id_group FOREIGN KEY (user_id) REFERENCES "user"(user_id) ON DELETE CASCADE;
				ALTER TABLE ONLY vm_table_button    ADD CONSTRAINT fk_vm_tab_button FOREIGN KEY (tab_id) REFERENCES vm_tab(tab_id);
				ALTER TABLE ONLY vm_table_field    ADD CONSTRAINT fk_vm_tab_button FOREIGN KEY (tab_id) REFERENCES vm_tab(tab_id);
				ALTER TABLE ONLY vm_section    ADD CONSTRAINT fk_vm_tab_section FOREIGN KEY (tab_id) REFERENCES vm_tab(tab_id);
				ALTER TABLE ONLY vm_section ADD CONSTRAINT fk_module_vm_section FOREIGN KEY (module) REFERENCES vm_module (module_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION;
				REVOKE ALL ON SCHEMA s_vitis FROM PUBLIC;
				REVOKE ALL ON SCHEMA s_vitis FROM u_vitis;
				GRANT ALL ON SCHEMA s_vitis TO u_vitis;
				GRANT USAGE ON SCHEMA s_vitis TO vitis_admin;
				GRANT USAGE ON SCHEMA s_vitis TO vitis_user;
				REVOKE ALL ON TABLE "user" FROM PUBLIC;
				REVOKE ALL ON TABLE "user" FROM u_vitis;
				GRANT ALL ON TABLE "user" TO u_vitis;
				GRANT ALL ON TABLE "user" TO vitis_admin;
				GRANT SELECT,UPDATE ON TABLE "user" TO vitis_user;
				REVOKE ALL ON TABLE vm_translation FROM PUBLIC;
				REVOKE ALL ON TABLE vm_translation FROM u_vitis;
				GRANT ALL ON TABLE vm_translation TO u_vitis;
				GRANT SELECT ON TABLE vm_translation TO vitis_user;
				GRANT ALL ON TABLE vm_translation TO vitis_admin;
				REVOKE ALL ON TABLE "group" FROM PUBLIC;
				REVOKE ALL ON TABLE "group" FROM u_vitis;
				GRANT ALL ON TABLE "group" TO u_vitis;
				GRANT ALL ON TABLE "group" TO vitis_admin;
				GRANT SELECT ON TABLE "group" TO vitis_user;
				REVOKE ALL ON TABLE user_group FROM PUBLIC;
				REVOKE ALL ON TABLE user_group FROM u_vitis;
				GRANT ALL ON TABLE user_group TO u_vitis;
				GRANT ALL ON TABLE user_group TO vitis_admin;
				GRANT SELECT ON TABLE user_group TO vitis_user;
				REVOKE ALL ON SEQUENCE seq_common FROM PUBLIC;
				REVOKE ALL ON SEQUENCE seq_common FROM u_vitis;
				GRANT ALL ON SEQUENCE seq_common TO u_vitis;
				GRANT ALL ON SEQUENCE seq_common TO vitis_admin;
				GRANT SELECT,UPDATE ON SEQUENCE seq_common TO vitis_user;
				REVOKE ALL ON TABLE domain FROM PUBLIC;
				REVOKE ALL ON TABLE domain FROM u_vitis;
				GRANT ALL ON TABLE domain TO u_vitis;
				GRANT ALL ON TABLE domain TO vitis_admin;
				GRANT SELECT ON TABLE domain TO vitis_user;
				REVOKE ALL ON TABLE privileges FROM PUBLIC;
				REVOKE ALL ON TABLE privileges FROM u_vitis;
				GRANT ALL ON TABLE privileges TO u_vitis;
				GRANT ALL ON TABLE privileges TO vitis_admin;
				GRANT SELECT ON TABLE privileges TO vitis_user;
				REVOKE ALL ON SEQUENCE seq_translation FROM PUBLIC;
				REVOKE ALL ON SEQUENCE seq_translation FROM u_vitis;
				GRANT ALL ON SEQUENCE seq_translation TO u_vitis;
				GRANT ALL ON SEQUENCE seq_translation TO vitis_admin;
				GRANT SELECT,UPDATE ON SEQUENCE seq_translation TO vitis_user;
				REVOKE ALL ON SEQUENCE seq_vm FROM PUBLIC;
				REVOKE ALL ON SEQUENCE seq_vm FROM u_vitis;
				GRANT ALL ON SEQUENCE seq_vm TO u_vitis;
				GRANT ALL ON SEQUENCE seq_vm TO vitis_admin;
				GRANT SELECT,UPDATE ON SEQUENCE seq_vm TO vitis_user;
				REVOKE ALL ON TABLE v_group FROM PUBLIC;
				REVOKE ALL ON TABLE v_group FROM u_vitis;
				GRANT ALL ON TABLE v_group TO u_vitis;
				GRANT ALL ON TABLE v_group TO vitis_admin;
				GRANT SELECT ON TABLE v_group TO vitis_user;
				REVOKE ALL ON TABLE vm_application_module FROM PUBLIC;
				REVOKE ALL ON TABLE vm_application_module FROM u_vitis;
				GRANT ALL ON TABLE vm_application_module TO u_vitis;
				GRANT ALL ON TABLE vm_application_module TO vitis_admin;
				GRANT SELECT ON TABLE vm_application_module TO vitis_user;
				REVOKE ALL ON TABLE vm_mode FROM PUBLIC;
				REVOKE ALL ON TABLE vm_mode FROM u_vitis;
				GRANT ALL ON TABLE vm_mode TO u_vitis;
				GRANT ALL ON TABLE vm_mode TO vitis_admin;
				GRANT SELECT ON TABLE vm_mode TO vitis_user;
				REVOKE ALL ON TABLE vm_mode_rolname FROM PUBLIC;
				REVOKE ALL ON TABLE vm_mode_rolname FROM u_vitis;
				GRANT ALL ON TABLE vm_mode_rolname TO u_vitis;
				GRANT SELECT ON TABLE vm_mode_rolname TO vitis_user;
				GRANT ALL ON TABLE vm_mode_rolname TO vitis_admin;
				REVOKE ALL ON TABLE v_mode FROM PUBLIC;
				REVOKE ALL ON TABLE v_mode FROM u_vitis;
				GRANT ALL ON TABLE v_mode TO u_vitis;
				GRANT ALL ON TABLE v_mode TO vitis_admin;
				GRANT SELECT ON TABLE v_mode TO vitis_user;
				REVOKE ALL ON TABLE v_ra_members_group FROM PUBLIC;
				REVOKE ALL ON TABLE v_ra_members_group FROM u_vitis;
				GRANT ALL ON TABLE v_ra_members_group TO u_vitis;
				GRANT ALL ON TABLE v_ra_members_group TO vitis_admin;
				GRANT SELECT ON TABLE v_ra_members_group TO vitis_user;
				REVOKE ALL ON TABLE vm_section FROM PUBLIC;
				REVOKE ALL ON TABLE vm_section FROM u_vitis;
				GRANT ALL ON TABLE vm_section TO u_vitis;
				GRANT ALL ON TABLE vm_section TO vitis_admin;
				GRANT SELECT ON TABLE vm_section TO vitis_user;
				REVOKE ALL ON TABLE vm_tab FROM PUBLIC;
				REVOKE ALL ON TABLE vm_tab FROM u_vitis;
				GRANT ALL ON TABLE vm_tab TO u_vitis;
				GRANT SELECT ON TABLE vm_tab TO vitis_user;
				GRANT ALL ON TABLE vm_tab TO vitis_admin;
				REVOKE ALL ON TABLE v_section FROM PUBLIC;
				REVOKE ALL ON TABLE v_section FROM u_vitis;
				GRANT ALL ON TABLE v_section TO u_vitis;
				GRANT ALL ON TABLE v_section TO vitis_admin;
				GRANT SELECT ON TABLE v_section TO vitis_user;
				REVOKE ALL ON TABLE v_tab FROM PUBLIC;
				REVOKE ALL ON TABLE v_tab FROM u_vitis;
				GRANT ALL ON TABLE v_tab TO u_vitis;
				GRANT ALL ON TABLE v_tab TO vitis_admin;
				GRANT SELECT ON TABLE v_tab TO vitis_user;
				REVOKE ALL ON TABLE v_user FROM PUBLIC;
				REVOKE ALL ON TABLE v_user FROM u_vitis;
				GRANT ALL ON TABLE v_user TO u_vitis;
				GRANT ALL ON TABLE v_user TO vitis_admin;
				GRANT SELECT,UPDATE ON TABLE v_user TO vitis_user;
				REVOKE ALL ON TABLE v_user_group FROM PUBLIC;
				REVOKE ALL ON TABLE v_user_group FROM u_vitis;
				GRANT ALL ON TABLE v_user_group TO u_vitis;
				GRANT ALL ON TABLE v_user_group TO vitis_admin;
				GRANT SELECT ON TABLE v_user_group TO vitis_user;
				REVOKE ALL ON TABLE vm_application FROM PUBLIC;
				REVOKE ALL ON TABLE vm_application FROM u_vitis;
				GRANT ALL ON TABLE vm_application TO u_vitis;
				GRANT ALL ON TABLE vm_application TO vitis_admin;
				GRANT SELECT ON TABLE vm_application TO vitis_user;
				REVOKE ALL ON TABLE vm_module FROM PUBLIC;
				REVOKE ALL ON TABLE vm_module FROM u_vitis;
				GRANT ALL ON TABLE vm_module TO u_vitis;
				GRANT ALL ON TABLE vm_module TO vitis_admin;
				GRANT SELECT ON TABLE vm_module TO vitis_user;
				REVOKE ALL ON TABLE vm_string FROM PUBLIC;
				REVOKE ALL ON TABLE vm_string FROM u_vitis;
				GRANT ALL ON TABLE vm_string TO u_vitis;
				GRANT SELECT ON TABLE vm_string TO vitis_user;
				GRANT ALL ON TABLE vm_string TO vitis_admin;
				REVOKE ALL ON TABLE vm_table_button FROM PUBLIC;
				REVOKE ALL ON TABLE vm_table_button FROM u_vitis;
				GRANT ALL ON TABLE vm_table_button TO u_vitis;
				GRANT SELECT ON TABLE vm_table_button TO vitis_user;
				GRANT ALL ON TABLE vm_table_button TO vitis_admin;
				REVOKE ALL ON TABLE vm_table_field FROM PUBLIC;
				REVOKE ALL ON TABLE vm_table_field FROM u_vitis;
				GRANT ALL ON TABLE vm_table_field TO u_vitis;
				GRANT ALL ON TABLE vm_table_field TO vitis_user;
				GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE vm_table_field TO vitis_admin;
				]]>
			</code>

		</query>
		<query>
			<type>update</type>
			<version>2016.02.00</version>
			<code>
				<![CDATA[ 
				-- FrÃ©dÃ©ric le 15/07/2016 15:21
				UPDATE s_vitis.vm_table_button SET event = 'deleteUsers()' WHERE tab_id = (select tab_id from s_vitis.vm_tab where name = 'vitis_users') AND label_id = 'vitis_6';
				]]>
			</code>

		</query>
		<query>
			<type>update</type>
			<version>2016.03.00</version>
			<code>
				<![CDATA[ 
				]]>
			</code>

		</query>
		<query>
			<type>update</type>
			<version>2016.04.00</version>
			<code>
				<![CDATA[ 
				]]>
			</code>

		</query>
		<query>
			<type>update</type>
			<version>2016.05.00</version>
			<code>
				<![CDATA[ 
				]]>
			</code>

		</query>
		<query>
			<type>update</type>
			<version>2017.01.00</version>
			<code>
				<![CDATA[ 
				-- Anthony le 24/01/2017 Ã  10:20
				CREATE OR REPLACE FUNCTION s_vitis.insertJointure(arrayJointure text, value1 varchar(100), tableSchema varchar(255),jointureTable varchar(255), key1 varchar(255), key2 varchar(255)) RETURNS VOID AS $BODY$ DECLARE item varchar(255); request text; BEGIN FOREACH item IN ARRAY string_to_array(arrayJointure, '|') LOOP request = 'INSERT INTO '|| tableSchema ||'.'|| jointureTable ||' ('|| key1 ||', '|| key2 ||')VALUES('; IF pg_typeof(value1)::text = 'integer' THEN request = request || value1 || ', '; ELSE request = request || '''' || value1 || ''', '; END IF; IF pg_typeof(item)::text = 'integer' THEN request = request || item || ');'; ELSE request = request || '''' || item || ''');'; END IF; EXECUTE request; END LOOP; RETURN; END $BODY$ LANGUAGE 'plpgsql';
				ALTER FUNCTION s_vitis.insertjointure(text, character varying, character varying, character varying, character varying, character varying) OWNER TO u_vitis;
				CREATE OR REPLACE FUNCTION s_vitis.wabinsertstate(    schemametier character varying,    tablestatus character varying,    statusname character varying,    progress integer)  RETURNS void AS $BODY$ DECLARE request text; rowData integer; Id integer; BEGIN EXECUTE 'SELECT status_id FROM ' || schemaMetier || '.' || tableStatus || ' WHERE name = '''||statusName||''';' INTO rowData; IF rowData IS NOT NULL THEN RAISE NOTICE '%', rowData;request = 'UPDATE ' || schemaMetier || '.' || tableStatus || ' SET progress = '|| progress ||' WHERE name = '''||statusName||''';'; ELSE EXECUTE 'SELECT MAX(status_id) FROM  '||schemaMetier||'.'||tableStatus|| ';' INTO Id; IF Id IS NOT NULL THEN 	RAISE NOTICE '%',  Id;	Id:= Id + 1; else	Id:=1;	RAISE NOTICE '%',  Id;end if;request = 'INSERT INTO ' || schemaMetier || '.' || tableStatus || ' (status_id, name, progress) VALUES (' || Id || ',''' || statusName|| ''', ' || progress || ');'; END IF; RAISE NOTICE '%', request;EXECUTE request; RETURN; END $BODY$  LANGUAGE plpgsql VOLATILE  COST 100;
				ALTER FUNCTION s_vitis.wabinsertstate(character varying, character varying, character varying, integer) OWNER TO u_vitis;
				-- Armand le 30/01/2017 Ã  10:00
				CREATE OR REPLACE VIEW s_vitis.v_section AS SELECT vm_section.tab_id, vm_section.section_id, vm_section.event, vm_section.index, vm_translation.translation AS label, vm_translation.lang, vm_section.name, vm_section.template, vm_section.ressource_id, vm_section.module AS module_name, vm_tab.name AS tab_name, vm_tab.mode_id FROM s_vitis.vm_section LEFT JOIN s_vitis.vm_translation ON vm_section.label_id::text = vm_translation.translation_id::text LEFT JOIN s_vitis.vm_tab ON vm_section.tab_id::text = vm_tab.tab_id::text;
				ALTER TABLE s_vitis.v_section OWNER TO u_vitis;
				REVOKE ALL ON TABLE s_vitis.v_section FROM PUBLIC;
				REVOKE ALL ON TABLE s_vitis.v_section FROM u_vitis;
				GRANT ALL ON TABLE s_vitis.v_section TO u_vitis;
				GRANT ALL ON TABLE s_vitis.v_section TO vitis_admin;
				GRANT SELECT ON TABLE s_vitis.v_section TO vitis_user;
				-- SÃ©bastien le 01/02/2017 Ã  12:33
				INSERT INTO s_vitis.vm_string (string, string_id) VALUES ('Section Mode du mode Configuration', 'vitis_81');
				INSERT INTO s_vitis.vm_translation (translation_id, lang, translation) VALUES ('vitis_81', 'fr', 'Modes');
				INSERT INTO s_vitis.vm_translation (translation_id, lang, translation) VALUES ('vitis_81', 'en', 'Modes');
				INSERT INTO s_vitis.vm_section (section_id, label_id, name, index, event, tab_id, template, ressource_id, module) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'vitis_81', 'modes', 2, 'loadModes', (select tab_id from s_vitis.vm_tab where name = 'vitis_configuration'), 'workspaceListTpl.html', 'vitis/modes', 'vitis');
				UPDATE s_vitis.vm_section SET index = 3 WHERE name = 'version' and label_id = 'vitis_76' and tab_id = (select tab_id from s_vitis.vm_tab where name = 'vitis_configuration');
				UPDATE s_vitis.vm_section SET index = 4 WHERE name = 'phpinfo' and label_id = 'vitis_77' and tab_id = (select tab_id from s_vitis.vm_tab where name = 'vitis_configuration');
				-- Armand le 15/02/2017 Ã  11:40
				INSERT INTO s_vitis.vm_string (string, string_id) VALUES ('Titre section websocket pour configuration', 'vitis_82');
				INSERT INTO s_vitis.vm_translation (translation_id, lang, translation) VALUES ('vitis_82', 'fr', 'Websocket');
				INSERT INTO s_vitis.vm_translation (translation_id, lang, translation) VALUES ('vitis_82', 'en', 'Websocket');
				INSERT INTO s_vitis.vm_section (section_id, label_id, name, index, event, tab_id, template, ressource_id, module) VALUES ((select nextval('s_vitis.seq_vm'::regclass)), 'vitis_82', 'websocket', 4, 'Javascript:reloadWebsocketStatus', (select tab_id from s_vitis.vm_tab where name = 'vitis_configuration'), 'modules/vitis/templates/websocketConfigurationTpl.html', NULL, 'vitis');
				-- Armand le 31/03/2017 Ã  11:40
				REVOKE ALL ON TABLE s_vitis.vm_table_field FROM vitis_user;
				REVOKE ALL ON TABLE s_vitis.vm_table_field FROM vitis_admin;
				GRANT SELECT ON TABLE s_vitis.vm_table_field TO vitis_user;
				GRANT ALL ON TABLE s_vitis.vm_table_field TO vitis_admin;
				]]>
			</code>
		</query>
		<query>
			<type>update</type>
			<version>2017.01.01</version>
			<code>
				<![CDATA[ 
				]]>
			</code>
		</query>
		<query>
			<type>update</type>
			<version>2017.01.02</version>
			<code>
				<![CDATA[ 
				]]>
			</code>
		</query>
		<query>
			<type>update</type>
			<version>2017.01.03</version>
			<code>
				<![CDATA[ 
				]]>
			</code>
		</query>
		<query>
			<type>update</type>
			<version>2017.01.04</version>
			<code>
				<![CDATA[ 
				-- Armand le 20/06/2017 Ã  18h ajout de la table feature_style
				CREATE TABLE IF NOT EXISTS s_vitis.feature_style(feature_style_id SERIAL NOT NULL,draw_color VARCHAR(50),draw_outline_color VARCHAR(50),draw_size VARCHAR(50),draw_dash VARCHAR(50),draw_symbol VARCHAR(50),text_font VARCHAR(50),text_color VARCHAR(50),text_outline_color VARCHAR(50),text_size VARCHAR(50),text_outline_size VARCHAR(50),text_offset_x VARCHAR(50),text_offset_y VARCHAR(50),text_rotation VARCHAR(50),text_text VARCHAR(255),feature_type VARCHAR(255),PRIMARY KEY (feature_style_id));
				ALTER TABLE s_vitis.feature_style owner TO u_vitis;
				GRANT ALL ON table s_vitis.feature_style TO u_vitis;
				GRANT SELECT ON TABLE s_vitis.feature_style TO vitis_user;
				GRANT ALL ON table s_vitis.feature_style TO vitis_admin;
				-- Armand le 27/07/2017 Ã  18h restriction des droits de vitis_user pour des raisons de sÃ©curitÃ©
				REVOKE ALL ON TABLE s_vitis."user" FROM vitis_user;
				REVOKE ALL ON TABLE s_vitis."user_group" FROM vitis_user;
				CREATE OR REPLACE FUNCTION s_vitis.is_vitis_admin() RETURNS boolean AS $total$ declare total boolean; BEGIN SELECT(SELECT count(*) FROM information_schema.applicable_roles WHERE role_name='vitis_admin') > 0 INTO total; RETURN total; END; $total$ LANGUAGE plpgsql;
				CREATE OR REPLACE VIEW s_vitis.v_user AS SELECT "user".user_id, "user".login, "user".name, "user".email, "user".company, "user".department, "user".ip_constraint, domain.domain, "user".domain_id, "user".last_connection, "user".restriction, CASE WHEN array_to_string(ARRAY( SELECT pg_group.groname FROM pg_group JOIN pg_roles ON pg_roles.oid = ANY (pg_group.grolist) WHERE "user".login::name = pg_roles.rolname AND (pg_group.groname = 'vitis_admin'::name OR pg_group.groname = 'vitis_user'::name)), '|'::text) = 'vitis_user|vitis_admin'::text OR array_to_string(ARRAY( SELECT pg_group.groname FROM pg_group JOIN pg_roles ON pg_roles.oid = ANY (pg_group.grolist) WHERE "user".login::name = pg_roles.rolname AND (pg_group.groname = 'vitis_admin'::name OR pg_group.groname = 'vitis_user'::name)), '|'::text) = 'vitis_admin|vitis_user'::text THEN 'admin'::text WHEN array_to_string(ARRAY( SELECT pg_group.groname FROM pg_group JOIN pg_roles ON pg_roles.oid = ANY (pg_group.grolist) WHERE "user".login::name = pg_roles.rolname AND (pg_group.groname = 'vitis_admin'::name OR pg_group.groname = 'vitis_user'::name)), '|'::text) = 'vitis_user'::text THEN 'user'::text ELSE ''::text END AS role FROM s_vitis."user" LEFT JOIN s_vitis.domain ON "user".domain_id = domain.domain_id WHERE "user".login = "current_user"() OR s_vitis.is_vitis_admin();
				CREATE OR REPLACE RULE delete_v_user AS ON DELETE TO s_vitis.v_user DO INSTEAD DELETE FROM s_vitis."user" WHERE "user".user_id = old.user_id;
				CREATE OR REPLACE RULE insert_v_user AS ON INSERT TO s_vitis.v_user DO INSTEAD INSERT INTO s_vitis."user" (user_id, login, domain_id, name, email, company, department, ip_constraint, restriction) VALUES (new.user_id, new.login, new.domain_id, new.name, new.email, new.company, new.department, new.ip_constraint, new.restriction);
				DROP RULE update_v_user ON s_vitis.v_user;
				CREATE OR REPLACE RULE update_v_user_u AS ON UPDATE TO s_vitis.v_user DO INSTEAD UPDATE s_vitis."user" SET name = new.name, email = new.email, company = new.company, department = new.department WHERE (new.name = "current_user"() or s_vitis.is_vitis_admin()) AND "user".user_id = new.user_id;
				CREATE OR REPLACE RULE update_v_user_a AS ON UPDATE TO s_vitis.v_user WHERE s_vitis.is_vitis_admin() DO INSTEAD UPDATE s_vitis."user" SET name = new.name, email = new.email, company = new.company, department = new.department, ip_constraint = new.ip_constraint, restriction = new.restriction WHERE (new.name = "current_user"() or s_vitis.is_vitis_admin()) AND "user".user_id = new.user_id;
				CREATE OR REPLACE VIEW s_vitis.v_user_group_by_rights AS SELECT user_group.user_id, user_group.group_id FROM s_vitis.user_group LEFT JOIN s_vitis."user" ON user_group.user_id = "user".user_id LEFT JOIN s_vitis."group" ON "group".group_id = user_group.group_id WHERE "user".login::name::text = "current_user"()::text OR s_vitis.is_vitis_admin();
				ALTER TABLE s_vitis.v_user_group_by_rights OWNER TO u_vitis;
				GRANT ALL ON TABLE s_vitis.v_user_group_by_rights TO u_vitis;
				GRANT ALL ON TABLE s_vitis.v_user_group_by_rights TO vitis_admin;
				GRANT SELECT ON TABLE s_vitis.v_user_group_by_rights TO vitis_user;
				CREATE OR REPLACE RULE update_v_user_group_by_rights AS ON DELETE TO s_vitis.v_user_group_by_rights DO INSTEAD DELETE FROM s_vitis.user_group WHERE user_group.group_id = old.group_id;
				CREATE OR REPLACE RULE insert_v_user_group_by_rights AS ON INSERT TO s_vitis.v_user_group_by_rights DO INSTEAD INSERT INTO s_vitis.user_group (user_id, group_id) VALUES (new.user_id, new.group_id);
				DROP RULE IF EXISTS update_v_user_a ON s_vitis.v_user;
				DROP RULE IF EXISTS update_v_user_u ON s_vitis.v_user;
				CREATE OR REPLACE RULE update_v_user AS ON UPDATE TO s_vitis.v_user DO INSTEAD (UPDATE s_vitis."user" SET name = new.name, email = new.email, company = new.company, department = new.department WHERE NOT s_vitis.is_vitis_admin() AND new.login::name = "current_user"() AND "user".user_id = new.user_id; UPDATE s_vitis."user" SET name = new.name, email = new.email, company = new.company, department = new.department, ip_constraint = new.ip_constraint, restriction = new.restriction WHERE s_vitis.is_vitis_admin() AND "user".user_id = new.user_id);
				-- Armand 02/08/2017: donne le droit d'Ã©dition sur last_connection
				CREATE OR REPLACE RULE update_v_user AS ON UPDATE TO s_vitis.v_user DO INSTEAD (UPDATE s_vitis."user" SET name = new.name, email = new.email, company = new.company, department = new.department, last_connection = new.last_connection WHERE NOT s_vitis.is_vitis_admin() AND new.login::name = "current_user"() AND "user".user_id = new.user_id; UPDATE s_vitis."user" SET name = new.name, email = new.email, company = new.company, department = new.department, ip_constraint = new.ip_constraint, domain_id = new.domain_id, last_connection = new.last_connection, restriction = new.restriction WHERE s_vitis.is_vitis_admin() AND "user".user_id = new.user_id);
				-- Armand 02/08/2017: correction bug: un utilisateur simple peut changer le nom, l'email la company, le departement et le last_connection d'un autre utilisateur si il passe un user_id dans les paramÃ¨tres Ã  changer
				CREATE OR REPLACE RULE update_v_user AS ON UPDATE TO s_vitis.v_user DO INSTEAD( UPDATE s_vitis."user" SET name = new.name, email = new.email, company = new.company, department = new.department, last_connection = new.last_connection WHERE NOT s_vitis.is_vitis_admin() AND new.login::name = "current_user"() AND "user".user_id = (SELECT user_id FROM s_vitis."user" WHERE login = "current_user"()); UPDATE s_vitis."user" SET name = new.name, email = new.email, company = new.company, department = new.department, ip_constraint = new.ip_constraint, domain_id = new.domain_id, last_connection = new.last_connection, restriction = new.restriction WHERE s_vitis.is_vitis_admin() AND "user".user_id = new.user_id;);
				]]>
			</code>
		</query>
		<query>
			<type>update</type>
			<version>2017.02.00</version>
			<code>
				<![CDATA[ 
				-- Laurent le 01/08/2017 Ã  12h Creation de fonction gÃ©nÃ©rique pour rÃ©cupÃ©rer l'utilisateur qui crÃ©Ã© ou met Ã  jour un enregistrement
				CREATE OR REPLACE FUNCTION s_vitis.insert_author_date() RETURNS trigger AS $BODY$ BEGIN NEW.author = current_user; NEW.create_date = now(); RETURN NEW;	END; $BODY$ LANGUAGE plpgsql VOLATILE COST 100;
				ALTER FUNCTION s_vitis.insert_author_date() OWNER TO u_vitis;
				CREATE OR REPLACE FUNCTION s_vitis.update_modifier_date()  RETURNS trigger AS $BODY$ BEGIN     NEW.modifier = current_user;	 NEW.update_date = now();    RETURN NEW;	END;$BODY$  LANGUAGE plpgsql VOLATILE  COST 100;
				ALTER FUNCTION s_vitis.update_modifier_date()  OWNER TO u_vitis;
				-- Armand 31/08/2017: correction bug: quand un administrateur met Ã  jour les groupes d'un utilisateur, il pert lui mÃªme les groupes qu'il a enlevÃ© Ã  l'utilisateur
				CREATE OR REPLACE RULE update_v_user_group_by_rights AS ON DELETE TO s_vitis.v_user_group_by_rights DO INSTEAD DELETE FROM s_vitis.user_group WHERE user_group.group_id = old.group_id AND user_group.user_id = old.user_id;
				--Yoann 12/09/2017: attribution de la sÃ©quence s_vitis.seq_common aux champs user_id(table user) et group_id (table group)
				ALTER TABLE s_vitis."user"    ALTER COLUMN user_id SET DEFAULT nextval('s_vitis.seq_common'::regclass);
				ALTER TABLE s_vitis."group"    ALTER COLUMN group_id SET DEFAULT nextval('s_vitis.seq_common'::regclass);
				]]>
			</code>
		</query>
		<query>
			<type>update</type>
			<version>2017.02.01</version>
			<code>
				<![CDATA[ 
				]]>
			</code>
		</query>
		<query>
			<type>update</type>
			<version>2017.02.02</version>
			<code>
				<![CDATA[ 
				]]>
			</code>
		</query>
		<query>
			<type>update</type>
			<version>2017.02.03</version>
			<code>
				<![CDATA[ 
				]]>
			</code>
		</query>
		<query>
			<type>update</type>
			<version>2017.02.04</version>
			<code>
				<![CDATA[ 
				]]>
			</code>
		</query>
		<query>
			<type>update</type>
			<version>2017.03.00</version>
			<code>
				<![CDATA[ 
				]]>
			</code>
		</query>
		<query>
			<type>update</type>
			<version>2017.04.00</version>
			<code>
				<![CDATA[
					ALTER FUNCTION s_vitis.is_vitis_admin() OWNER TO u_vitis;
				]]>
			</code>
		</query>
		<query>
			<type>update</type>
			<version>2018.01.00</version>
			<code>
				<![CDATA[ 
					ALTER TABLE s_vitis."user" ADD CONSTRAINT check_u_vitis CHECK (name::text != 'u_vitis'::text)
					ALTER TABLE s_vitis."user" ADD CONSTRAINT check_postgres CHECK (name::text != 'postgres'::text)
					-- Armand 06/02/2018 15:31
					ALTER TABLE s_vitis.domain ALTER COLUMN password TYPE character varying(255);
				]]>
			</code>
		</query>
		<query>
			<type>update</type>
			<version>2018.02.00</version>
			<code>
				<![CDATA[ 
				]]>
			</code>
		</query>
	</queriesCollection>
</sqlQueries>